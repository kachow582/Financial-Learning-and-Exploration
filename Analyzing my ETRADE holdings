#Calculating financial statistics of the stocks I currently hold and creating a linear regression to observe how they'll move in the future

#Imports
import pandas as pd
import numpy as np
import yfinance as yf
from matplotlib import pyplot as plt
import datetime as dt

from sklearn.linear_model import LinearRegression

#Downloading stock data from yahoo finance
symbols = ['ERX','JNJ','MSFT','RIVN','VFC','WBA']
weights = np.array([16.6,16.6,16.6,16.6,16.6,16.6]) /100
data = []
start = dt.date.today()-dt.timedelta(366)
end = dt.date.today()
stockdata = yf.download(symbols,start,end)

adjclose = stockdata['Adj Close']
returns = np.log(adjclose).diff()
returns.dropna(inplace=True)
std = np.sqrt(returns.var()*len(returns))
cov = returns.cov()*len(returns)
print(f"{np.sqrt(np.dot(weights.T,np.dot(cov,weights))):.2%}")

#Plotting simple daily returns
plt.figure(figsize=(21,10))
plt.plot(returns)
plt.xlabel('Date')
plt.ylabel('Change in Price')
plt.title('Simple Daily Returns of Selected Stocks')
plt.legend(symbols)
plt.show()

#Linear Regression model
# X = np.arange(start.astype(datetime),end.astype(datetime))
X = np.arange(len(adjclose))
X = X.reshape(-1, 1)
linreg = LinearRegression()
linreg.fit(X,adjclose)
predict = linreg.predict(X)
plt.xticks()
plt.plot(X,predict)
plt.legend(symbols)
plt.title('Linear Regression Prediction Model of Stock Growth')
plt.xlabel('Days')
plt.ylabel('Stock Price')
plt.show()

